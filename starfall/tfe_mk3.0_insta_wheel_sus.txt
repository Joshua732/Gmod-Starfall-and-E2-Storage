--@name TFE MK3.0 Insta wheel sus
--@author Joshua732
--@server

--[[
##STARFALL Made by Joshua732 converted from an e2
##Github link https://github.com/Joshua732/Gmod-Starfall-and-E2-Storage
##Please leave this stuff here so people can find my other stuff
##Bonus points if you do not change the name of this STARFALL

##Basic setup: Wire Base to Baseplate of your vehicle. Wire LeftDriveWheel and RightDriveWheel to your drive wheels (The wheels that your gearbox connects to)
##Spawn in two Adv Entity makers, Link one to your left track wheels and the other to your right track wheels. (DO NOT INCLUDE THE DRIVE WHEELS)
##Reset the chips and it will make you your passive SUS
##Make sure all ropes face forwards amd that they are not mistmatch
Your tank baseplate must face 90 yaw due to the constraints 
This has only been tested with tank wheels, other wheels should work but you may have to ajust rope pos
If you tank spases out, then set your baseplate weight to like 4000, should fix it
##Change settings to your liking

## This chip also axis your drive wheels to your baseplate alongside slaving the wheels to the drivewheels, AKA it does all of the work. If you have deco wheels, then you will have to do slaving and other things on your own
--]]
if SERVER then
    --Made by a REALLY "angry" TFE spessman
    
    --Note: sadly you have to leave this starfall on your vehicle due to sf not truly making the constraints
    --LoL, nevermind
    constraint.setConstraintClean(false)
    wire.adjustInputs({"Base","LWheel","RWheel","LeftDriveWheel","RightDriveWheel"}, {"entity","array","array","entity","entity"}) 
    
    if wire.ports.LeftDriveWheel:isValid() && wire.ports.RightDriveWheel:isValid() then
    -- SEETTINGS
    RopeSIZE = 5 --# set to 0 to hide ropes
    --Changes how the SUS works for your tank, do not touch if you do not understand
    --Note keep numbers the same but with different power. If Constant is 30000 then Damping will be 3000. If Constant is 45000 then Damping will be 4500
    Constant = 30000 --#aka the ELASTIC. How strong it is
    Damping = 3000 --## how much the wheels want to go back to their og pos
    --Ajust so all ropes are forwards and track ropes are even
    --May have to screw around with it till the ropes match
    
    LEFTR = Vector(-40,20,20)
    LIGHTR = Vector(-40,-20,20)
    
    REFTR = Vector(40,20,20)
    RIGHTR = Vector(40,-20,20)
    --This controls how the ballsocket rotates, Currently it rotates in the x so tanks have to face north/90 yaw
    --Change to fit other wheels if needed
    BallsocketRotationMin =  Vector(-180,-0.1,-0.1)
    BallsocketRotationMax = Vector(180,0.1,0.1)
    --This slaves the wheels to the drivewheels, You should not really need to change this but it is here
    BallsocketSlaveMin = Vector(180,-0.1,-0.1)
    BallsocketSlaveMax = Vector(-180,0.1,0.1)
    --This is the axis to the baseplate for the drivewheels
    --change if the Drivewheels are not rotating forward/Axis is not in line with baseplate
    AxisOffset = Vector(0,1,0)
    --Do not touch anything beyond this point due to horror
    
    I=0
    while(I<table.count(wire.ports.LWheel)) do
        I = I + 1
        Cwheel = wire.ports.LWheel[I]
        constraint.breakAll(Cwheel)
        
end
    I=0
       while(I<table.count(wire.ports.RWheel)) do
        I = I + 1
        Cwheel = wire.ports.RWheel[I]
        constraint.breakAll(Cwheel)
        
end
constraint.breakAll(wire.ports.LeftDriveWheel)
constraint.breakAll(wire.ports.RightDriveWheel)
    I = 0
    T = 0
    while I<table.count(wire.ports.LWheel) do
    I = I + 1
    Cwheel = wire.ports.LWheel[I]
    Cwheel:setNocollideAll(true)
    constraint.rope(T, wire.ports.Base, Cwheel,0,0,wire.ports.Base:worldToLocal(Cwheel:localToWorld(LEFTR)), Vector(0,0,0), 0 ,0, 0, RopeSIZE, "cable/rope", 1, Color(255,0,0))
    T = T + 1
    constraint.rope(T, wire.ports.Base, Cwheel,0,0,wire.ports.Base:worldToLocal(Cwheel:localToWorld(LIGHTR)), Vector(0,0,0), 0 ,0, 0, RopeSIZE, "cable/rope", 1, Color(255,0,0))
  
    T = T + 1
    constraint.elastic(T,wire.ports.Base,Cwheel, 0, 0, wire.ports.Base:worldToLocal(Cwheel:localToWorld(Vector(0,0,0))),Vector(0,0,0), Constant,Damping, 0, RopeSIZE, 1)
    T = T + 1
    constraint.ballsocketadv(wire.ports.Base, Cwheel, 0,0, wire.ports.Base:worldToLocal(Cwheel:localToWorld(Vector(0,0,0))), Vector(0,0,0), 0, 0, BallsocketRotationMin, BallsocketRotationMax, Vector(0,0,0), true, true)

end

    I = 0
    while I<table.count(wire.ports.RWheel) do
    I = I + 1
    Cwheel = wire.ports.RWheel[I]
    Cwheel:setNocollideAll(true)
    constraint.rope(T, wire.ports.Base, Cwheel,0,0,wire.ports.Base:worldToLocal(Cwheel:localToWorld(REFTR)), Vector(0,0,0), 0 ,0, 0, RopeSIZE, "cable/rope", 1, Color(255,0,0))
   --constraint.rope(T,wire.ports.Base,wire.ports.Base:worldToLocal(Cwheel:localToWorld(REFTR)),Cwheel,Vector(0,0,0),0, RopeSIZE,"cable/rope",1,Vector(255,1,1))
    T = T + 1
    constraint.rope(T, wire.ports.Base, Cwheel,0,0,wire.ports.Base:worldToLocal(Cwheel:localToWorld(RIGHTR)), Vector(0,0,0), 0 ,0, 0, RopeSIZE, "cable/rope", 1, Color(255,0,0))
   --constraint.rope(T,wire.ports.Base,wire.ports.Base:worldToLocal(Cwheel:localToWorld(RIGHTR)),Cwheel,Vector(0,0,0),0, RopeSIZE,"cable/rope",1,Vector(255,1,1))
    T = T + 1
    constraint.elastic(T,wire.ports.Base,Cwheel, 0, 0, wire.ports.Base:worldToLocal(Cwheel:localToWorld(Vector(0,0,0))),Vector(0,0,0), Constant,Damping, 0, RopeSIZE, 1)
   --constraint.elastic(T,wire.ports.Base,wire.ports.Base:worldToLocal(Cwheel:localToWorld(Vector(0,0,0))),Cwheel,Vector(0,0,0),Constant,Damping,0,"cable/rope",RopeSIZE,1,Vector(255,1,1))
    T = T + 1
    constraint.ballsocketadv(wire.ports.Base, Cwheel, 0,0, wire.ports.Base:worldToLocal(Cwheel:localToWorld(Vector(0,0,0))), Vector(0,0,0), 0, 0, BallsocketRotationMin, BallsocketRotationMax, Vector(0,0,0), true, true)

   --constraint.ballsocket(wire.ports.Base,wire.ports.Base:worldToLocal(Cwheel:localToWorld(Vector(0,0,0))),Cwheel,Vector(-180,-0.1,-0.1),Vector(180,0.1,0.1),Vector(0,0,0),1)
end

    I = 0

    while I<table.count(wire.ports.LWheel) do
    I = I + 1
    Cwheel =wire.ports.LWheel[I]
    constraint.ballsocketadv(Cwheel, wire.ports.LeftDriveWheel, 0, 0, Vector(0,0,0), Vector(0,0,0), 0, 0, BallsocketSlaveMin,BallsocketSlaveMax, Vector(0,0,0),true,true)
   --constraint.ballsocket(Cwheel,Vector(0,0,0),wire.ports.LeftDriveWheel,Vector(180,-0.1,-0.1),Vector(-180,0.1,0.1),Vector(0,0,0),1)
end

    I = 0
    while I<table.count(wire.ports.RWheel) do 
    I = I + 1
    Cwheel = wire.ports.RWheel[I]
    constraint.ballsocketadv(Cwheel, wire.ports.RightDriveWheel, 0, 0, Vector(0,0,0), Vector(0,0,0), 0, 0, BallsocketSlaveMin,BallsocketSlaveMax, Vector(0,0,0),true,true)
   --constraint.ballsocket(Cwheel,Vector(0,0,0),wire.ports.RightDriveWheel,Vector(180,-0.1,-0.1),Vector(-180,0.1,0.1),Vector(0,0,0),1)
end
wire.ports.LeftDriveWheel:setNocollideAll(true)
wire.ports.RightDriveWheel:setNocollideAll(true)
constraint.axis(wire.ports.LeftDriveWheel, wire.ports.Base, 0, 0, Vector(0,0,0), wire.ports.Base:worldToLocal(wire.ports.LeftDriveWheel:localToWorld(AxisOffset)), 0, 0, 0,true)
--constraint.axis(wire.ports.LeftDriveWheel,Vector(0,0,0),wire.ports.Base,wire.ports.Base:worldToLocal(wire.ports.LeftDriveWheel:localToWorld(Vector(0,1,0))))
constraint.axis(wire.ports.RightDriveWheel, wire.ports.Base, 0, 0, Vector(0,0,0), wire.ports.Base:worldToLocal(wire.ports.RightDriveWheel:localToWorld(AxisOffset)), 0, 0, 0,true)
--constraint.axis(wire.ports.RightDriveWheel,Vector(0,0,0),wire.ports.Base,wire.ports.Base:worldToLocal(wire.ports.RightDriveWheel:localToWorld(Vector(0,1,0))))
    end  
end
